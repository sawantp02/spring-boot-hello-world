# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Maven Publish

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build with Maven
      run: mvn -B package --file spring-boot-hello-world/pom.xml
    - run: mkdir staging && cp spring-boot-hello-world/target/*.jar staging
    - run: ls spring-boot-hello-world/target
    - uses: actions/upload-artifact@v2.2.1
      with:
        name: library-jar-files.zip
        path: staging

  publish:
    if: ${{ github.event_name == 'push' }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Download Build Artifacts
      uses: actions/download-artifact@v2
      with:
        # Artifact name
        name: library-jar-files.zip
        # Destination path
        path: staging
    - name: Publish to GitHub Packages Apache Maven
      run: mvn --batch-mode org.apache.maven.plugins:maven-deploy-plugin:3.0.0-M1:deploy-file -Dfile=staging/*.jar -Durl=https://maven.pkg.github.com/sawantp02/spring-boot-hello-world -DrepositoryId=spring-boot-hello-world
      env:
        GITHUB_TOKEN: ${{ github.token }}
